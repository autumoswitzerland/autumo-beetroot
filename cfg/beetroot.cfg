
#------------------------------------------------------------------------------
#
#  beetRoot configuration
#  Version: 3.3
#
#------------------------------------------------------------------------------
#
#  2024 autumo GmbH
#  Date: 26.09.2024
#
#------------------------------------------------------------------------------



#------------------------------------------------------------------------------
# General configuration
#------------------------------------------------------------------------------

#
# Server name.
#
server_name=beetRoot

#
# Admin port.
#
# Used for shutdown, internal server commands, and/or
# distributed installations where a standalone beetRoot 
# server is running.
#
# Special case if 'admin_com_mode' = 'web' - tunneling
# of server commands over HTTP or HTTPS:
#
# In this case, a client's server commands are processed
# through the web API using the web API key (admin_com_web_api_key)
# over the web port (ws_port). Internal server commands
# will always route through this socket port, regardless 
# of what is configured.
#
admin_port=8777

#
# Admin host.
#
# Used for shutdown or distributed installation scenarios
# where the server runs without a standalone web server, 
# and beetRoot web is installed on a servlet container 
# like Tomcat.
#
admin_host=localhost

#
# Start file server?
#
admin_file_server_start=no

#
# File server port.
#
admin_file_port=9777

#
# File receiver port.
#
admin_file_receiver_port=9779

#
# File storage implementation.
# Must be configured if the file server is started. 
# Interface: ch.autumo.beetroot.server.FileStorage
#
admin_file_storage=

#
# File buffer size in kBytes.
# Used for transferring files between server and client.
#
admin_file_buffer_size=32

#
# Use encoded passwords in this configuration?
# Values: yes|no
# 
# Use 'pwencoder.sh', mode 1.
#
admin_pw_encoded=no

#
# Encryption mode for client-server communication.
# E.g., in cases where a separate beetRoot web servlet
# communicates with the beetRoot server
# (distributed installation).
#
# none : No encryption (e.g., for company-wide applications).
# sha3 : Client/server module commands are internally encrypted using SHA3-256.
# ssl  : Everything, including file transfers, is encrypted via SSL;
#        requires a public/private key pair in a keystore file.
# 
# Values: none|sha3|ssl
#
admin_com_encrypt=sha3

#
# Admin communication mode for server commands used
# for remote module dispatching.
#
# 'sockets' is the default value, where communication 
# is performed via standard sockets using the encryption
# defined in 'admin_com_encrypt'.
#
# 'web' is used when commands need to be tunneled 
# over HTTP/HTTPS. In this case, JSON server commands
# are sent to the web server on the 'ws_port'. 
# If 'admin_com_encrypt' is set to 'ssl',
# requests are sent via HTTPS using the certificate 
# from the 'keystore' file.
#
# Note: Internal server commands are never processed over the web.
#
# Values: sockets|web
#
admin_com_mode=sockets

#
# If 'admin_com_mode' is 'web' and HTTPS is being used, 
# do you want to enable/disable hostname verification 
# when using SSL certificates?
#
# In a production environment, verification should be enabled
# (yes). In a testing environment with self-signed certificates 
# on 'localhost', verification may fail, so it can be disabled.
# 
# Values: yes|no
#
admin_com_host_verify=no

#
# This admin web API key is only used when 'admin_com_mode'
# is set to 'web'. It authorizes JSON server commands
# from clients.
#
# It may be encoded based on the value of 'admin_pw_encoded'.
# If encoded, it uses the beetRoot encoder:
# Use 'pwencoder.sh', mode 1.
#
admin_com_web_api_key=

#
# Server keystore for HTTPS and SSL sockets.
# In web environments: specify an absolute path.
#
# For web (HTTPS), only used in standalone mode.
#
keystore=ssl/beetroot.jks

#
# Server keystore password.
# May be encoded based on the value of 'admin_pw_encoded'.
# If encoded, it uses the beetRoot encoder:
# Use 'pwencoder.sh', mode 1.
#
keystore_password=beetroot

#
# General connection timeout in seconds.
#
connection_timeout=5

#
# Logging implementation class.
# Interface: ch.autumo.beetroot.logging.Logging
#
logging_implementation=ch.autumo.beetroot.logging.Log4j2Logging

#
# Display ANSI console colors for shell/batch output?
#
# If deactivated, you can activate ANSI colors in Windows:
# - CMD and PowerShell: "reg add HKCU\Console /v VirtualTerminalLevel /t REG_DWORD /d 1"
# - PowerShell: "Set-ItemProperty HKCU:\Console VirtualTerminalLevel -Type DWORD 1"
# - Alternatively, you can download Windows Terminal.
#
# Values: yes|no
#
console_colors=yes

#
# Modify this ONCE! Changing this will invalidate all 
# previously generated passwords, so it should be set
# from the beginning.
#
# NOTE:
# - Must be a 32-character HEX string.
# - If beetRoot is run in a distributed mode, 
#   the 'beetroot.cfg' in the servlet container 
#   must have the same seed!
#
# You can use this generator:
# https://www.browserling.com/tools/random-hex
#
secret_key_seed=0488d4cf784c87d46704f9b2563a93f3

#
# Define a hash provider for hashing database passwords.
# Interface: ch.autumo.beetroot.security.password.PasswordHashProvider
#
hash_implementation=ch.autumo.beetroot.security.password.Argon2HashProvider
#hash_implementation=ch.autumo.beetroot.security.password.PBKPD2HashProvider

#
# Define all server-side dispatchers for remote server components.
# Dispatchers handle client server commands for distributed 
# (client-server) components and modules.
#
# Define one line per component/module dispatcher. Naming convention:
#   dispatcher_<module|component>
#
# Example:
#   dispatcher_scheduler=ch.autumo.scheduler.SchedulerDispatcher
#   dispatcher_document=ch.autumo.document.DocumentDispatcher
#
# Interface: ch.autumo.beetroot.server.Dispatcher
#
#dispatcher_scheduler=
dispatcher_log=ch.autumo.beetroot.server.modules.log.LogDispatcher



#------------------------------------------------------------------------------
# Web server/service configuration
#------------------------------------------------------------------------------

#
# Start the web server? Values: yes|no
#
# Set to "no" if beetRoot is deployed within a servlet container, 
# or if the web server/service isn't required.
#
ws_start=yes

#
# Initialization class, if defined.
# Must implement the 'Initializer' interface.
# Interface: ch.autumo.beetroot.Initializer
#
ws_init_class=

#
# Web app name. Used for features such as 
# Google Authenticator 2FA.
#
ws_app_name=autumo beetRoot

#
# Temporary directory. If not specified,
# a default temporary directory will be used.
#
ws_tmp_dir=

#
# Log configuration file (relative to the working directory).
# If left blank, 'cfg/logging.xml' is used.
#
ws_log_cfg=

#
# Web address or URL, as seen from the external world.
#
# Needed for generating links in emails.
#
# E.g., https://mypage.com
#
ws_url=http://localhost

#
# Web application port.
#
ws_port=8778

#
# Name of the session ID or token for 
# the web container session.
# If left blank, '__SESSION_ID__' is used.
#
ws_session_id_name=

#
# User session timeout in seconds.
# Minimum of 600 seconds.
#
ws_session_timeout=1800

#
# User session cookie expiration in days.
#
ws_session_expiration=1

#
# Use HTTPS? Values: yes|no
# Only used in standalone mode.
#
# Special case: If 'admin_com_mode' = 'web', 
# server commands are tunneled over HTTPS.
#
# If HTTPS is used, adjust 'ws_url' to 'https://...'
#
ws_https=no

#
# Use extended roles? Default since version 3.0.0.
# Disabling this requires further reconfiguration.
#
# The 'roles' and 'users_roles' tables are used.
#
ws_use_ext_roles=yes

#
# Use CSRF tokens? Values: yes|no
#
ws_use_csrf_tokens=yes

#
# Maximum overall cache size in MB.
#
ws_cache_size=2

#
# File cache size in kBytes.
# Upper limit for caching a file.
#
ws_file_cache_size=200

#
# Response buffer size in kBytes.
#
ws_response_buffer_size=16

#
# Response download buffer size in kBytes.
#
ws_response_download_buffer_size=8

#
# Web server user session storage.
# For standalone versions, store in the user's home directory.
#
ws_user_sessions=.beetroot-web-sessions



#------------------------------------------------------------------------------
# Web Application Configuration
#------------------------------------------------------------------------------

#
# The API key name used for various Web-API calls.
#
# You can make this key more cryptic to add an extra
# layer of security in addition to the key defined 
# in the web settings.
#
web_api_key_name=apiKey

#
# Configure this only if the servlet is not deployed under 
# the root URL ("/"). In that case, HTML-referenced sources 
# (e.g., images, links, stylesheets) need to be prefixed with 
# a path, usually the servlet name.
#
# Example: <img src="/img/image.png"> becomes:
# <img src="/pre-url-path/img/image.png">
#
web_html_ref_pre_url_part=

#
# Number of records to display per page on the web interface.
#
web_max_records_per_page=20

#
# Maximum number of referenced records to load.
#
web_max_ref_records=200

#
# The router where all web application routes
# (URLs and their handlers) are defined.
# Interface: ch.autumo.beetroot.routing.Router
#
# The default router reads routes from 'routing.xml'
# and generally does not need to be replaced, 
# unless required for specific purposes.
#
web_router=ch.autumo.beetroot.routing.BeetRootDefaultRouter

#
# Default web handler class.
# Base class: ch.autumo.beetroot.handler.BaseHandler
#
web_default_handler=ch.autumo.beetroot.handler.tasks.TasksIndexHandler

#
# Default web handler entity.
#
web_default_entity=tasks

#
# Application user roles. Unused since version 3.0.0,
# as extended role management is now the standard.
#
# These roles are only relevant for the simple authentication
# component in beetRoot. To use extended roles (with role table),
# enable the 'ws_use_ext_roles' option.
#
# If you need more advanced functionality, such as ACLs with
# groups, you'll need to extend the handlers, web pages, and 
# entities. You may also need to adjust the 'hasAccess' methods 
# in the handlers and adapt other web pages (e.g., menus).
#
#web_roles=Administrator,Operator,Controller

#
# Can the admin role be deleted in extended role management?
# Strongly discouraged!
#
web_admin_role_delete=no

#
# Supported languages for the web app. The first listed is the default.
#
# Also populate 'cfg/languages.cfg'.
#
web_languages=en,de,es,it,pt,ru,ja,zh

#
# Should the system scan for '{$l.*}' tags in web templates
# and translate them?
#
# Translation files (if applicable) are located in:
# - web/lang/tmpl/lang_en.properties
# - web/lang/tmpl/lang_de.properties
# - etc.
#
# This affects HTML templates and 'columns.cfg' files with language tags.
# For application message translations, see the files 
# 'web/lang/app/lang_*.properties'.
#
# As of version 3.1.0, this is enabled by default for template translations.
#
web_translations=yes

#
# Maximum upload size for files, in MB.
# Check the servlet container configuration when deployed as a servlet.
#
web_max_upload_size=32

#
# Enable password validation.
#
web_pw_validator=yes

#
# File map for additional DB columns' HTML input mappings.
# Example format for each line in the mapping file:
#
#   col-name = htmlInputTypeName,htmlInputRegexPattern
#
web_input_map=



#------------------------------------------------------------------------------
# Database Configuration
#------------------------------------------------------------------------------

#
# Should passwords in the database be encoded?
# Applies to all columns named 'password'.
#
# If encoded, use the beetRoot encoder ('pwencoder.sh', mode 0).
#
db_pw_encoded=no

#
# Database URL.
#
# Even when using an external data-source, the JDBC prefix 
# 'jdbc:<db-name>' must still be defined to determine 
# the database vendor for specific operations.
#
# For H2 databases within a servlet context, use the 
# variable [WEB-CONTEXT-PATH] or an absolute path.
#
# To share an H2 database between a web container and 
# beetRoot server, append ';AUTO_SERVER=TRUE' to the H2 URL.
#
#db_url=jdbc:h2:./db/h2/db/beetroot;AUTO_SERVER=TRUE;IFEXISTS=TRUE
db_url=jdbc:mariadb://localhost:3306/beetroot
#db_url=jdbc:postgresql://localhost:5432/beetroot
#db_url=jdbc:oracle:thin:@localhost:1521/orcl

#
# Database username.
#
db_user=beetroot

#
# Database password.
#
# If encoded, use the beetRoot encoder ('pwencoder.sh', mode 1).
#
db_password=beetroot

#
# Automatically update the 'modified' column for every entity 
# if set to 'yes'. The entity must have a 'modified' column in 
# the database if this option is activated.
# Values: yes|no
#
db_auto_update_modified=yes

#
# A custom database driver is only necessary for MySQL or unsupported databases.
#
# MySQL's data-source has some issues, so the MariaDB driver is recommended, 
# but it works well even for MySQL databases.
#
#db_driver=

#
# Use an external JNDI data-source?
# If enabled, the external data-source parameters will be used,
# and the following properties will be ignored:
# db_url, db_pool_*, db_user, db_password.
#
#db_ds_ext_jndi=

#
# Custom data-source properties.
# When these properties are set, db_url, db_user, and db_password
# are ignored unless an external JNDI data-source is used.
#
#db_ds_int_dataSourceClassName=
#db_ds_int_dataSource.user=
#db_ds_int_dataSource.password=
#db_ds_int_dataSource.databaseName=
#db_ds_int_dataSource.portNumber=
#db_ds_int_dataSource.serverName=

#
# Database connection pool settings.
# Typically useful with MySQL.
# Not used with external JNDI data-source.
#
# Refer to:
# - https://github.com/brettwooldridge/HikariCP#gear-configuration-knobs-baby
# - https://github.com/brettwooldridge/HikariCP/wiki/MySQL-Configuration
#
#db_pool_dataSource.cachePrepStmts=true
#db_pool_dataSource.prepStmtCacheSize=250
#db_pool_dataSource.prepStmtCacheSqlLimit=2048
#db_pool_dataSource.useServerPrepStmts=true
#db_pool_dataSource.useLocalSessionState=true
#db_pool_dataSource.rewriteBatchedStatements=true
#db_pool_dataSource.cacheResultSetMetadata=true
#db_pool_dataSource.cacheServerConfiguration=true
#db_pool_dataSource.elideSetAutoCommits=true
#db_pool_dataSource.maintainTimeStats=false



#------------------------------------------------------------------------------
# Mail Configuration
#------------------------------------------------------------------------------

#
# In certain environments, alternative mail implementations 
# may be required. Options: 'jakarta' (default) or 'javax'.
# If 'javax' is used, 'mail_session_name' must be specified.
#
mail_implementation=jakarta

#
# Mail session name. Default is 'beetRootMailSession'.
# Only used if 'javax' is the mailer implementation.
#
mail_session_name=

#
# Mail server host.
# Used unless 'mail.from' is defined in the database properties.
#
mail_host=localhost

#
# Mail server port.
# Used unless 'mail.from' is defined in the database properties.
#
mail_port=2500

#
# Enable mail authentication? Values: yes|no
# If 'yes', user and password must be provided.
#
mail_auth=no

#
# Mail username.
#
mail_user=

#
# Mail password.
#
# If encoded, use the beetRoot encoder ('pwencoder.sh', mode 1).
#
mail_password=

#
# MIME formats for outgoing mail.
# Must include at least one of 'txt' or 'html'. Comma-separated values.
#
mail_formats=html

#
# Enable TLS for mail? Values: yes|no
#
mail_tls_enable=no

#
# Default email sender address.
# Used unless 'mail.from' is defined in the database properties.
#
mail_from=beetroot.web-mailer@autumo.ch



#------------------------------------------------------------------------------
# SMS Configuration
#------------------------------------------------------------------------------

#
# SMS messenger implementation.
# Interface: ch.autumo.beetroot.sms.Messenger
#
#sms_implementation=ch.autumo.sms.ASPSMS
#sms_implementation=ch.autumo.sms.TextAnywhere
sms_implementation=ch.autumo.beetroot.sms.TwilioMessenger

# ASPSMS specific configuration
sms_aps_originator=YOUR_NAME
sms_aps_userkey=YOUR_USER_KEY
sms_aps_password=YOUR_PASSWORD
sms_aps_url=APSSMS_URL
sms_aps_flashing=yes
#sms_aps_url_delivery_notification=YOUR_OK_URL
#sms_aps_url_no_delivery_notification=YOUR_NOK_URL

# TextAnywhere specific configuration
sms_textany_username=YOUR_USER_NAME
sms_textany_api_password=YOUR_API_PASSWORD

# Twilio specific configuration
sms_twilio_account_sid=YOUR_SID
sms_twilio_auth_token=YOUR_TOKEN
sms_twilio_phone_number=YOUR_TWILIO_PHONE_NUMBER



#------------------------------------------------------------------------------
# Accepted MIME types for Web server
#------------------------------------------------------------------------------

#
# Allowed text mime types. 
#
ws_mime_allowed_text	=	text/plain \
							text/html \
							text/css \
							image/svg+xml \
							application/xml \
							application/json \
							application/javascript

#
# Allowed octet mime types. 
#
ws_mime_allowed_octet	=	image/png \
							image/gif \
							image/jpeg \
							image/tiff \
							image/webp \
							image/x-icon \
							application/vnd.ms-fontobject \
							font/ttf \
							font/woff \
							font/woff2

#
# Allowed archive mime types. 
#
ws_mime_allowed_archive	=	application/zip \
							application/gzip \
							application/x-tar


