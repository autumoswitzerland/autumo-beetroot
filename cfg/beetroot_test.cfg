
#------------------------------------------------------------------------------
#
#  beetRoot configuration
#  Version: 3.3
#
#------------------------------------------------------------------------------
#
#  2024 autumo GmbH
#  Date: 26.09.2024
#
#------------------------------------------------------------------------------



#------------------------------------------------------------------------------
# General configuration
#------------------------------------------------------------------------------

#
# Server name.
#
server_name=beetRoot

#
# Admin port.
#
# Used for shutdown, etc. (internal server commands)
# and/or distributed installation; where a beetRoot 
# stand-alone server is running.
#
# Special case if 'admin_com_mode' = 'web' - tunneling
# of server commands over HTTP or HTTPS:
#
# In this case a client's server commands are processed
# per web API with a web API key (admin_com_web_api_key)
# with the web port (ws_port). Internal server commands
# are always routed over this socket port, no matter
# what is configured!
#
admin_port=8777

#
# Admin host.
#
# Used for shutdown or distributed installation;
# server without stand-alone web-server and
# beetRoot web installed on e.g. Tomcat. 
#
admin_host=localhost

#
# Start file server?
#
admin_file_server_start=no

#
# File server port.
#
admin_file_port=9777

#
# File receiver port.
#
admin_file_receiver_port=9779

#
# File storage implementation.
# This value must be configured if the file server is started! 
# Interface: ch.autumo.beetroot.server.FileStorage
#
admin_file_storage=

#
# File buffer size in kBytes.
# Used when transferring files between server and client.
#
admin_file_buffer_size=32

#
# Use encoded passwords in this configuration?
# Values: yes|no
# 
# Use 'pwencoder.sh', mode 1.
#
admin_pw_encoded=no

#
# Encrypt mode client-server communication.
# E.g. in case separate beetRoot web
# in a servlet container communicates 
# with the beetRoot Server
# (distributed installation).
#
# none : No encryption at all (e.g. company-wide application use)
# sha3 : Client/Server module commands are internally encrypted by SHA3-256
# ssl  : Everything is encrypted by SSL (also file transfers);
#        public/private-key-pair key-store-file needed, any algorithm!
# 
# Values: none|sha3|ssl
#
admin_com_encrypt=sha3

#
# Admin communication mode for server commands that are used
# for remote module dispatching.
#
# 'Sockets' is the default value, where communication is made 
# through standard sockets using the encryption defined in 
# 'admin_com_encrypt'.
#
# 'web' is used if commands must be tunneled over HTTP/HTTPS;
# in this case, JSON server commands are sent to web-server
# to the port 'ws_port'! If 'admin_com_encrypt' is set to 'ssl',
# requests are sent over HTTPS using the certificate within
# the key-store file 'keystore'.
# 
# Of course for this to work, 'ws_start' must be set to 'yes' 
# and the web-server must always be started, even the web-server
# doesn't serve web-pages or requests: It must serve JSON answers 
# for server commands.
#
# Note: Internal server commands are never processed over the web.
#
# Values: sockets|web
#
admin_com_mode=sockets

#
# If admin communication mode ('admin_com_mode') is 'web' and
# therefore in tunnel mode, and if HTTPS is used, do you want
# to turn on/off host-name verification when using SSL
# certificates?
#
# In a productive environment, verification should be turned on
# (yes)! In a testing environment where often 'self-signed'
# certificates are used on a 'localhost', this should be turned off,
# since host-name verification will not work in this scenario!
# 
# Values: yes|no
#
admin_com_host_verify=no

#
# This admin web API key is only used, when 'admin_com_mode'
# is set to 'web'; in this case, this API key is used for
# authorization to accept JSON server commands from a client.
#
# It is encoded or not, see switch 'admin_pw_encoded'.
# 
# If it is encoded, it is with the beetRoot encoder:
# Use 'pwencoder.sh', mode 1.
#
admin_com_web_api_key=

#
# Server default key-store for HTTPS and SSL-Sockets!
# Web (HTTPS): Only used for stand-alone version.
#
# Within a web-container: define an absolute path!
#
keystore=ssl/beetroot.jks

#
# Server key-store password.
#
# It is encoded or not, see switch 'admin_pw_encoded'.
# 
# If it is encoded, it is with the beetRoot encoder:
# Use 'pwencoder.sh', mode 1.
#
keystore_password=beetroot

#
# General connection timeout in seconds.
#
connection_timeout=5

#
# Logging implementation class.
# Interface: ch.autumo.beetroot.logging.Logging
#
logging_implementation=ch.autumo.beetroot.logging.Log4j2Logging

#
# Show ANSI console colors for shell/batch output?
#
# To activate ANSI colors in Windows:
# - CMD and PowerShell: "reg add HKCU\Console /v VirtualTerminalLevel /t REG_DWORD /d 1"
# - PowerShell: "Set-ItemProperty HKCU:\Console VirtualTerminalLevel -Type DWORD 1"
# - You also could download the Windows Terminal: Windows Terminal
#
# Yes|No
#
console_colors=yes

#
# Change this ONCE! But this will make all 
# earlier generated passwords invalid, configure
# this from beginning.
#
# NOTE:
# - It must be a HEX string of 32 character length.
# - If you run beetRoot distributed; then the
#   'beetroot.cfg' within the servlet container
#   must have the same seed too!
#
# You can use this generator:
# https://www.browserling.com/tools/random-hex
#
secret_key_seed=0488d4cf784c87d46704f9b2563a93f3

#
# Define a hash provider for hashing database passwords, etc.
# Interface: ch.autumo.beetroot.security.password.PasswordHashProvider
#
hash_implementation=ch.autumo.beetroot.security.password.Argon2HashProvider
#hash_implementation=ch.autumo.beetroot.security.password.PBKPD2HashProvider

#
# All server-side dispatchers for server-remote components.
# These dispatchers are used to dispatch client's server-commands
# for distributed (client-server) component and modules.
#
# Define one line per component/module-dispatcher, name scheme:
#   dispatcher_<module|component>
#
# E.g.:
#   dispatcher_scheduler=ch.autumo.scheduler.SchedulerDispatcher
#   dispatcher_document=ch.autumo.document.DocumentDispatcher
#
# Interface: ch.autumo.beetroot.server.Dispatcher
#
#dispatcher_scheduler=
dispatcher_log=ch.autumo.beetroot.server.modules.log.LogDispatcher



#------------------------------------------------------------------------------
# Web server/service configuration
#------------------------------------------------------------------------------

#
# Start web server? Values: yes|no
#
# "No" in case the beetRoot servlet for
# is deployed within a servlet container
# or web server/service isn't used.
#
ws_start=yes

#
# This class is called for additional
# initialization purposes if defined.
# Must implement 'Initializer' interface.
# Interface: ch.autumo.beetroot.Initializer
#
ws_init_class=

#
# Web app name; used for special occasions
# such as the use of 2FA Google Authenticator.
#
ws_app_name=autumo beetRoot

#
# Temporary directory. If left out,
# a standard temporary directory is used.
#
ws_tmp_dir=

#
# Log configuration file,
# relative to working directory.
# If left blank, 'cfg/logging.xml' is used.
#
ws_log_cfg=

#
# Web address, URL.
# As seen from the outside world!
# Only used for stand-alone version.
#
# It is needed for links generated
# within emails sent.
#
# E.g. https://mypage.com
#
ws_url=http://localhost

#
# Web application port.
#
ws_port=8778

#
# Name of the session ID / token name ID for 
# web container session ID.
# If left blank '__SESSION_ID__' is used.
#
ws_session_id_name=

#
# User session timeout in seconds.
# Minimum 600 seconds! 
#
ws_session_timeout=1800

#
# User session cookie expiration in days. 
#
ws_session_expiration=1

#
# Use HTTPS? Values: yes|no
# Only used for stand-alone version.
#
# Special case if 'admin_com_mode' = 'web' - tunneling
# of server commands over HTTPS:
#
# In this case the client's 'beetroot.cfg'
# configuration determines here that it send messages
# per HTTPS to the beetRoot web-server.
#
# Don't forget to adjust 'ws_url' to 'https://...' if
# this value is set to 'yes'!
#
ws_https=yes

#
# Use extended roles? Default since 3.0.0.
# Switching of needs further re-configuration
# of beetRoot!
#
# Table 'roles' and 'users_roles' (assignments) are used. 
#
ws_use_ext_roles=yes

#
# Use CSRF tokens? Values: yes|no
#
ws_use_csrf_tokens=yes

#
# Overall max. cache size in MB.
#
ws_cache_size=1

#
# File cache size in kB.
# Upper limit to cache a file.
#
ws_file_cache_size=200

#
# Response buffer size in kBytes.
#
ws_response_buffer_size=16

#
# Response download buffer size in kBytes.
#
ws_response_download_buffer_size=8

#
# Web server user sessions storage.
# for stand-alone version.
# (Store in user home directory)
#
ws_user_sessions=.beetroot-web-sessions



#------------------------------------------------------------------------------
# Web application configuration
#------------------------------------------------------------------------------

#
# API key name used for several Web-API calls.
#
# You can name this more cryptic to add
# another level of security next to the
# key defined in the web Settings. 
#
web_api_key_name=apiKey

#
# This only should be configured when
# the servlet version isn't deployed
# under the root URL "/" and hence the
# HTML-referenced sources (e.g. images,
# links, stylesheets) must be referenced
# with a pre-path, usually the servlet name!
#
# E.g. <img src="/img/image.png"> ->
# <img src="/pre-url-path/img/image.png">.
#
web_html_ref_pre_url_part=

#
# How many records should be shown per index web page?
#
web_max_records_per_page=20

#
# Maximum amount of referenced records loaded.
#
web_max_ref_records=200

#
# The router where all web application routes
# (URL's and their handlers, etc.) must be defined.
# Interface: ch.autumo.beetroot.routing.Router
#
# The default router reads routes from 'routing.xml'
# and doesn't need to be exchanged, unless for
# special purposes.
#
web_router=ch.autumo.beetroot.routing.BeetRootDefaultRouter

#
# Default web handler class.
# Base class: ch.autumo.beetroot.handler.BaseHandler
#
web_default_handler=ch.autumo.beetroot.handler.tasks.TasksIndexHandler

#
# Default web handler entity.
#
web_default_entity=tasks

#
# App-user roles. Unused since extended role management
# is the standard (=> 3.0.0).
#
# Used for the simple authentication component built
# into beetRoot. If you want to use extended roles
# (with role table), use the switch 'ws_use_ext_roles'.
#
# If you want more than this, e.g., an ACL with groups, 
# etc., you have to extends handlers, web pages and 
# add/update entities. Furthermore, you possibly have to 
# adjust the 'hasAccess'-methods of the handlers accordingly.
# Further web pages might also be adapted, e.g., for menus,
# etc.
#
#web_roles=Administrator,Operator,Controller

#
# Can the admin-role be deleted in the extended role
# management. We urge you not to activate this!
#
web_admin_role_delete=no

#
# Languages for web app.
# First is the default!
#
# Also populate 'cfg/languages.cfg'
#
web_languages=en,de,es,it,pt,ru,ja,zh

#
# Scan for '{$l.*}'-tags in web templates
# and translate them?
#
# Translations are here (if any):
# - web/lang/tmpl/lang_en.properties
# - web/lang/tmpl/lang_de.properties
# - etc.
#
# This only affects translations in the templates and 
# not other translations. For general translation 
# see files 'web/lang/tmpl/lang_*.properties'.
#
# Since 3.1.0 switched on and the default for
# template translations.
#
web_translations=yes

#
# Max. upload size for files in MB.
# Also check servlet container config
# when deployed as servlet.
#
web_max_upload_size=32

#
# Use password validator.
#
web_pw_validator=yes

#
# Map file for additional DB columns HTML input mappings.
# Inside the mapping file; 1-n lines, e.g.:
#
#   col-name = htmlInputTypeName,htmlInputRegexPattern
#
web_input_map=



#------------------------------------------------------------------------------
# Database configuration
#------------------------------------------------------------------------------

#
# Use encoded passwords in DB?
# Valid for all values in all table columns named 'password'!
# 
# If it is encoded, it is with the beetRoot encoder:
# Use 'pwencoder.sh', mode 0 (ZERO)!
#
db_pw_encoded=no

#
# DB URL.
#
# If you use an external data-source, you still have
# to define the JDBC-prefix 'jdbc:<db-name>' here;
# it is used internally to determine what DB is used
# for specific vendor-operations.
#
# Note: for H2 and servlet context, 
#       you can use the variable
#       [WEB-CONTEXT-PATH] or use
#       an absolute path. 
#
#db_url_h2_non_keywords=TEST1,TEST2
db_url=jdbc:h2:./db/h2/db/test/beetroot;AUTO_SERVER=TRUE;IFEXISTS=TRUE
#db_url=jdbc:mariadb://localhost:3306/beetroot_test
#db_url=jdbc:postgresql://localhost:5432/beetroot
#db_url=jdbc:pgsql://localhost:5432/beetroot
#db_url=jdbc:oracle:thin:@localhost:1521/orcl

#
# DB User.
#
db_user=beetroot

#
# DB password.
#
# It is encoded or not, see switch 'admin_pw_encoded'.
# 
# If it is encoded, it is with the beetRoot encoder:
# Use 'pwencoder.sh', mode 1.
#
db_password=beetroot

#
# Updates the time-stamp/date-time automatically
# if set to 'yes'. Every entity must have 
# a 'modified' column in the database,
# if this is activated! 
# Values: yes|no
#
db_auto_update_modified=no

#
# A DB driver is only used when using the MySQL driver library
# or you want to use unsupported databases.
#
# MySql's data-source has some issues, that,s why you should
# use the driver instead, but the MariaDB driver used works well,
# even for MySQL databases!
#
#db_driver=

#
# External JNDI data-source?
# If this is set, the external data-source with its own 
# configuration parameters are used!
#
# In this case, the following parameters are ignored:
# db_url, db_pool_*, db_user, db_password.
#
#db_ds_ext_jndi=

#
# Own defined data-source properties.
#
# If these properties are provided, then
# db_url, db_user, db_password are ignored,
# but only if no external JNDI data-source
# has been defined, then the external data-source
# is used!
#
#db_ds_int_dataSourceClassName=
#db_ds_int_dataSource.user=
#db_ds_int_dataSource.password=
#db_ds_int_dataSource.databaseName=
#db_ds_int_dataSource.portNumber=
#db_ds_int_dataSource.serverName=

#
# DB Connection pool parameters.
# Usually only makes sense with MySQL.
# Not used with external JNDI data-source!
#
# See also here:
# - https://github.com/brettwooldridge/HikariCP#gear-configuration-knobs-baby
# - https://github.com/brettwooldridge/HikariCP/wiki/MySQL-Configuration
#
#db_pool_dataSource.cachePrepStmts=true
#db_pool_dataSource.prepStmtCacheSize=250
#db_pool_dataSource.prepStmtCacheSqlLimit=2048
#db_pool_dataSource.useServerPrepStmts=true
#db_pool_dataSource.useLocalSessionState=true
#db_pool_dataSource.rewriteBatchedStatements=true
#db_pool_dataSource.cacheResultSetMetadata=true
#db_pool_dataSource.cacheServerConfiguration=true
#db_pool_dataSource.elideSetAutoCommits=true
#db_pool_dataSource.maintainTimeStats=false



#------------------------------------------------------------------------------
# Mail configuration
#------------------------------------------------------------------------------

#
# In some environments, other Mail implementations
# might be needed. Possible values: 'jakarta' 
# (default if left blank) or 'javax'. If 'javax'
# is used, the property 'mail_session_name' must
# be defined.
#
mail_implementation=jakarta

#
# Mail session name. Default if left blank is
# 'beetRootMailSession'. Only used by 'javax'
# mailer.
#
mail_session_name=

#
# Mailer host.
# Used unless 'mail.from' is configured in
# database 'properties'.
#
mail_host=localhost

#
# Mailer port.
# Used unless 'mail.from' is configured in
# database 'properties'.
#
mail_port=2500

#
# Mail authentication? Values: yes|no
# -> User and password must be specified; No or Yes
#
mail_auth=no

#
# Mail User.
#
mail_user=

#
# Mail password.
#
# It is encoded or not, see switch 'admin_pw_encoded'.
# 
# If it is encoded, it is with the beetRoot encoder:
# Use 'pwencoder.sh', mode 1.
#
mail_password=

#
# Mail MIME formats that should be sent.
# 'txt' and/or 'html', at least one necessary!
# Comma-separated values.
#
mail_formats=html

#
# TLS enable; No or Yes
#
mail_tls_enable=no

#
# Define one email sender address
# Used unless 'mail.from' is configured in
# database 'properties'.
#
mail_from=beetroot.web-mailer@autumo.ch



#------------------------------------------------------------------------------
# SMS configuration
#------------------------------------------------------------------------------

#
# SMS messenger implementation.
# Interface: ch.autumo.beetroot.sms.Messenger
#
sms_implementation=ch.autumo.sms.ASPSMS
#sms_implementation=ch.autumo.sms.TextAnywhere
#sms_implementation=ch.autumo.beetroot.sms.TwilioMessenger

# ASPSMS specific
# Originator: 10 characters max.
sms_aps_originator=YOUR_NAME
sms_aps_userkey=YOUR_USER_KEY
sms_aps_password=YOUR_PASSWORD
sms_aps_url=APSSMS_URL
sms_aps_flashing=yes
#sms_aps_url_delivery_notification=YOUR_OK_URL
#sms_aps_url_no_delivery_notification=YOUR_NOK_URL

# TextAnywhere specific
sms_textany_username=YOUR_USER_NAME
sms_textany_api_password=YOUR_API_PASSWORD

# TWILIO specific
sms_twilio_account_sid=YOUR_SID
sms_twilio_auth_token=YOUR_TOKEN
sms_twilio_phone_number=YOUR_TWILIO_PHONE_NUMBER



#------------------------------------------------------------------------------
# Accepted MIME types for Web server
#------------------------------------------------------------------------------

#
# Allowed text mime types. 
#
ws_mime_allowed_text	=	text/plain \
							text/html \
							text/css \
							image/svg+xml \
							application/xml \
							application/json \
							application/javascript

#
# Allowed octet mime types. 
#
ws_mime_allowed_octet	=	image/png \
							image/gif \
							image/jpeg \
							image/tiff \
							image/webp \
							image/x-icon \
							application/vnd.ms-fontobject \
							font/ttf \
							font/woff \
							font/woff2

#
# Allowed archive mime types. 
#
ws_mime_allowed_archive	=	application/zip \
							application/gzip \
							application/x-tar \
							application/java-archive


