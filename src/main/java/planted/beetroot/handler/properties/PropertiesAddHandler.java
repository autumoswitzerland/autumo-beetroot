/**
 * Generated by PLANT - beetRoot CRUD Generator.
 */
package planted.beetroot.handler.properties;

import java.util.HashMap;
import java.util.Map;

import ch.autumo.beetroot.Session;
import ch.autumo.beetroot.handler.DefaultAddHandler;

/**
 * Properties add handler. 
 */
public class PropertiesAddHandler extends DefaultAddHandler {
	
	public PropertiesAddHandler(String entity) {
		super(entity);
	}

	public PropertiesAddHandler(String entity, String errMsg) {
		super(entity, errMsg);
	}
	
	@Override
	public Class<?> getRedirectHandler() {
		return PropertiesIndexHandler.class;
	}

	@Override
	public Map<String, Object> getAddMandatoryFields() {
		
		final Map<String, Object> fields = new HashMap<String, Object>();
		
		// NOTE: Provide default values for fields that are NOT
		// nullable and that aren't present in the add GUI!
		
		// IMPORTANT: Don't put fields here, that are visible in the GUI!
		
		// EXAMPLES:
		//
		// We cannot use 'name' here, since it is used in the GUI, just for 
		// demonstration:
		//
		// 		fields.put("name", "<DEFAULT-VALUE>");
		//
		// Further example with a non-existing field, you can use
		// 'NOW()' for time-stamps:
		//
		// 		fields.put("created", "NOW()");

		return fields;
	}

	@Override
	public Class<?> getBeanClass() {
		return Property.class;
	}

	@Override
	public boolean hasAccess(Session userSession) {
		return userSession.getUserRoles().contains("Administrator");
	}

	@Override
	public String getTitle(Session userSession) {
		return "Settings";
	}
	
}
